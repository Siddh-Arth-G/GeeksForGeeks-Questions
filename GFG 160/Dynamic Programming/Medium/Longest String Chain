//////////Question Link

https://www.geeksforgeeks.org/batch/gfg-160-problems/track/dynamic-programming-gfg-160/problem/longest-string-chain

//////////Solution

class Solution {
    public int longestStringChain(String words[]) {
        Arrays.sort(words, Comparator.comparingInt(String::length)); // Sort words by length
        Map<String, Integer> dp = new HashMap<>(); // Store longest chain ending at each word
        int maxChain = 1;
        
        for (String word : words) {
            int longest = 1;
            for (int i = 0; i < word.length(); i++) {
                String predecessor = word.substring(0, i) + word.substring(i + 1);
                longest = Math.max(longest, dp.getOrDefault(predecessor, 0) + 1);
            }
            dp.put(word, longest);
            maxChain = Math.max(maxChain, longest);
        }
        
        return maxChain;
    }
    
   
}
