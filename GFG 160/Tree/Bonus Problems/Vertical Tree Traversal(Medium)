//////////Question Link

https://www.geeksforgeeks.org/batch/gfg-160-problems/track/tree-bonus-problem/problem/print-a-binary-tree-in-vertical-order

//////////Solution

/*
class Node
{
    int data;
    Node left, right;

    public Node(int d)
    {
        data = d;
        left = right = null;
    }
}
*/

class Solution {
      static void DFS(Node root, int hd, int[] mn, 
                        HashMap<Integer, ArrayList<Integer>> mp) {
        if (root == null) 
            return;
        
        if (!mp.containsKey(hd)) 
            mp.put(hd, new ArrayList<>());
        
        mp.get(hd).add(root.data);
        
        mn[0] = Math.min(mn[0], hd);
        
        DFS(root.left, hd - 1, mn, mp);
        DFS(root.right, hd + 1, mn, mp);
    }

    static ArrayList<ArrayList<Integer>> verticalOrder(Node root) {
      
        HashMap<Integer, ArrayList<Integer>> mp = new HashMap<>();
        
        int[] mn = {0}; 

        DFS(root, 0, mn, mp);
        
        ArrayList<ArrayList<Integer>> res = new ArrayList<>();
        int hd = mn[0];

        while (mp.containsKey(hd)) {
            res.add(mp.get(hd));
            hd++;
        }

        return res;
         
    }
}
