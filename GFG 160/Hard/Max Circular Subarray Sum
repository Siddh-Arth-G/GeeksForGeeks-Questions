//////////Question Link

https://www.geeksforgeeks.org/batch/gfg-160-problems/track/arrays-gfg-160/problem/max-circular-subarray-sum-1587115620

//////////Solution

class Solution {

    // a: input array
    // n: size of array
    // Function to find maximum circular subarray sum.
    int kadaneMinSum(int[] arr, int len){
        int sum = arr[0];
        int minSum = arr[0];
        
        for(int i=1; i<len; i++){
            sum = Math.min(sum+arr[i], arr[i]);
            minSum = Math.min(minSum, sum);
        }
        return minSum;
    }
    
    int kadaneMaxSum(int[] arr, int len){
        int sum = arr[0];
        int maxSum = arr[0];
        
        for(int i=1; i<len; i++){
            sum = Math.max(sum+arr[i], arr[i]);
            maxSum = Math.max(maxSum, sum);
        }
        return maxSum;
    }
    
    
    public int circularSubarraySum(int arr[]) {
        // Your code here
        int len = arr.length;
        
        int sum = 0;
        for(int i=0; i<len; i++){
            sum += arr[i];
        }
        
        int minSum = kadaneMinSum(arr, len);
        
        int maxSum = kadaneMaxSum(arr, len);
        
        int circularSum = sum - minSum;
        
        if(maxSum > 0){
            return Math.max(maxSum, circularSum);
        }
        
        return circularSum;
    }
}
