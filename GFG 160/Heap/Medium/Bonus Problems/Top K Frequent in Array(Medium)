//////////Question Link

https://www.geeksforgeeks.org/batch/gfg-160-problems/track/heap-bonus-problems/problem/top-k-frequent-elements-in-array

//////////Solution

class Solution {
    public ArrayList<Integer> topKFrequent(int[] arr, int k) {
        // Your code here
        // finding all repeating combinatiions
        Map<Integer,Integer> freqMap = new HashMap<>();
        for(int i=0;i<arr.length;i++)
        {
            freqMap.put(arr[i],freqMap.getOrDefault(arr[i],0)+1);
        }
        
        // add all map elem to Priority queue
        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(
                (a, b) -> freqMap.get(a).equals(freqMap.get(b)) ? b - a 
                : freqMap.get(b) - freqMap.get(a));
        
        maxHeap.addAll(freqMap.keySet());
        
        // extract k element to Alist
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0;i<k & !maxHeap.isEmpty();i++)
        {
            list.add(maxHeap.poll());
        }
        
        
        return list;        
    }
}
