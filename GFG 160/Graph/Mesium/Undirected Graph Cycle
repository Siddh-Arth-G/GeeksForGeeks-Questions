//////////Question Link

https://www.geeksforgeeks.org/batch/gfg-160-problems/track/graph-gfg-160/problem/detect-cycle-in-an-undirected-graph

//////////Solution

class Solution {
    public boolean isCycle(int V, int[][] edges) {
        // Code here
        List<Integer> [] adj = constructedadj(V,edges);
        
        for(int[] edge : edges)
        {
            adj[edge[0]].add(edge[1]);
            adj[edge[1]].add(edge[0]);
        }
        
        boolean[] visited = new boolean[V];
        
        for(int u = 0; u < V; u++)
        {
            if(!visited[u])
            {
                if(helper(u,adj,visited, -1))
                return true;
            }
        }
        return false;
    }
    static boolean helper(int v, List<Integer>[] adj, boolean[] visited, int parent)
    {
        
        visited[v] = true;
        
        for(int i : adj[v])
        {
            if(!visited[i])
            {
                if(helper(i, adj, visited, v))
                return true;
            }
            else if(i != parent)
            {
                return true;
            }
        }
        return false;
    }
    static List<Integer>[] constructedadj(int V, int[][] edges)
    {
        List<Integer>[] adj = new ArrayList[V];
        
        for(int i = 0; i < V; i++)
        {
            adj[i] = new ArrayList<>();
        }
        return adj;
    }
}
