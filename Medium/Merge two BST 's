//////////Question Link

https://www.geeksforgeeks.org/problems/merge-two-bst-s/1

/////////Solution

/*
class Node
{
    int data;
    Node left, right;

    public Node(int d)
    {
        data = d;
        left = right = null;
    }
}

*/
class Solution {
    // Function to return a list of integers denoting the node
    // values of both the BST in a sorted order.
    void helper(Node root, List<Integer> list){
        if(root == null){
            return;
        }
        helper(root.left, list);
        list.add(root.data);
        helper(root.right, list);
    }
    public List<Integer> merge(Node root1, Node root2) {
        // Write your code here
        List<Integer> list1 = new ArrayList<>();
        List<Integer> list2 = new ArrayList<>();
        helper(root1, list1);
        helper(root2, list2);
        List<Integer> result = new ArrayList<>();
        int i=0; 
        int j=0;
        while(i<list1.size() && j<list2.size()){
            if(list1.get(i) <= list2.get(j)){
                result.add(list1.get(i++));
            }else{
                result.add(list2.get(j++));
            }
        }
        while(i<list1.size()){
            result.add(list1.get(i++));
        }
        while(j<list2.size()){
            result.add(list2.get(j++));
        }
        return result;
    }
}
