class Solution{
    static int maxLength(String S){
        // code here
        // Stack<Integer> st = new Stack<>();
        // st.push(-1);
        // int max = 0;
        // for(int i=0; i< S.length(); i++){
        //     char ch = S.charAt(i);
        //     if(ch == '('){
        //         st.push(i);
        //     }else{
        //         st.pop();
        //         if(st.isEmpty()){
        //             st.push(i);
        //         }else{
        //             int len = i - st.peek();
        //             max = Math.max(max, len);
        //         }
        //     }
        // }
        // return max;
        int open = 0; 
        int close = 0;
        int max = 0;
        for(int i=0; i<S.length(); i++){
            char ch = S.charAt(i);
            if(ch == '('){
                open++;
            }else{
                close++;
            }
            
            if(open == close){
                int len = open + close;
                max = Math.max(max, len);
            }else if(close > open){
                open = close = 0; 
            }
        }
        
        
        open = close = 0;
        for(int i=S.length()-1; i>=0; i--){
            char ch = S.charAt(i);
            if(ch == '('){
                open++;
            }else{
                close++;
            }
            
            if(open == close){
                int len = open + close;
                max = Math.max(max, len);
            }else if(open > close){
                open = close = 0; 
            }
        }
        
        return max;
        
    }
}
